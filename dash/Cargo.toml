[package]
name = "dashcore"
version = "0.30.0"
authors = [
    "Samuel Westrich <sam@dash.org>",
    "Anton Suprunchuk <anton@dash.org>",
    "Dmitrii Golubev <dmitrii.golubev@dash.org>"
]
license = "CC0-1.0"
homepage = "https://github.com/dashevo/rust-dashcore/"
repository = "https://github.com/dashevo/rust-dashcore/"
documentation = "https://dashcore.readme.io/docs"
description = "General purpose library for using and interoperating with Dash Core payment chain."
categories = ["cryptography::cryptocurrencies"]
keywords = [ "crypto", "dash" ]
readme = "../README.md"
exclude = ["tests", "contrib"]
edition = "2021"

# Please don't forget to add relevant features to docs.rs below
[features]
default = [ "std", "secp-recovery" ]
base64 = [ "base64-compat" ]
rand-std = ["secp256k1/rand-std"]
rand = ["secp256k1/rand"]
serde = ["actual-serde", "dashcore_hashes/serde", "secp256k1/serde"]
secp-lowmemory = ["secp256k1/lowmemory"]
secp-recovery = ["secp256k1/recovery"]
signer = ["secp-recovery", "rand"]

# At least one of std, no-std must be enabled.
#
# The no-std feature doesn't disable std - you need to turn off the std feature for that by disabling default.
# Instead no-std enables additional features required for this crate to be usable without std.
# As a result, both can be enabled without conflict.
std = ["secp256k1/std", "dashcore_hashes/std", "bech32/std", "internals/std"]
no-std = ["core2", "dashcore_hashes/alloc", "dashcore_hashes/core2", "secp256k1/alloc"]

[package.metadata.docs.rs]
all-features = true
rustdoc-args = ["--cfg", "docsrs"]

[dependencies]
internals = { package = "dashcore-private", version = "0.1.0", path = "../internals" }
bech32 = { version = "0.9.0", default-features = false }
dashcore_hashes = { path = "../hashes", package = "dashcore_hashes", default-features = false }
secp256k1 = { default-features = false, features = ["bitcoin_hashes"], version= "0.27.0" }
core2 = { version = "0.3.0", optional = true, features = ["alloc"], default-features = false }
rustversion = { version="1.0.9"}
# Do NOT use this as a feature! Use the `serde` feature instead.
actual-serde = { package = "serde", version = "1.0.103", default-features = false, features = [ "derive", "alloc" ], optional = true }

base64-compat = { version = "1.0.0", optional = true }
bitcoinconsensus = { version = "0.20.2-0.5.0", default-features = false, optional = true }
hex_lit = "0.1.1"

anyhow = { version= "1.0" }
hex = { version= "0.4" }
bincode = { version= "2.0.0-rc.3", optional = true }
rs-ffi-interfaces = { git = "https://github.com/pankcuf/rs-ffi-macro.git", package = "rs-ffi-interfaces" }
rs-ffi-macro-derive = { git = "https://github.com/pankcuf/rs-ffi-macro.git", package = "rs-ffi-macro-derive" }

[dev-dependencies]
serde_json = "1.0.96"
serde_test = "1.0.19"
serde_derive = "1.0.103"
secp256k1 = { features = [ "recovery", "rand-std", "bitcoin_hashes" ], version="0.27.0" }
bip39 = "2.0.0"
bincode = "1.3.1"

[[example]]
name = "bip32"

[[example]]
name = "handshake"
required-features = ["std"]

[[example]]
name = "ecdsa-psbt"
required-features = ["std", "bitcoinconsensus"]

[[example]]
name = "taproot-psbt"
required-features = ["std", "rand-std", "bitcoinconsensus"]
